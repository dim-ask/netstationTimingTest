function videopres% make sure in case of error that cursor and keyboard are reactivated    try         videopres_main           %run the experiment script    catch my_error        ListenChar(0);          %reactivate keyboard        ShowCursor();           %show cursor again        PsychPortAudio('Close');        Screen('CloseAll');     %Close screen window, in case it had opened                try            NetStation('Disconnect');        catch        end        rethrow(my_error);      %show what happened    endendfunction videopres_mainListenChar(2);HideCursor;% test script for netsastion.mdiary log.txtdiary onEEG = true;eegSyncEverySecs = 30;%basic parametersBLOCKS = 4;         % the number of blocks% refresh_interval=Screen('GetFlipInterval',win)framedur=0.03333;            % ISIScrNr=0;            % the screen id% we use this offset value in out settings to compensate for screen related delayoffset = -0.011   ;% better use avi formattestvideo = 'bwvideo5.avi';eventFrames = [1+(0:10:80) -1];      % when to send markersnEventFrames = length(eventFrames) - 1;eventMarkers = repmat({'whit'}, nEventFrames, 1);   % what markers to sendeventTimes = zeros(nEventFrames, 1);%host%NetStationHostName = '193.1.1.56'; %default NetStation IP; we changed thatNetStationHostName = '10.10.10.42';Screen('Preference','SkipSyncTests',2);%open PTB windowwin=Screen('OpenWindow',ScrNr, 0,[],32,2, 0);refresh_interval=Screen('GetFlipInterval',win);% Wdur=5*refresh_interval;            % the duration of the white square% Bdur=5*refresh_interval;            % ISI% offset = refresh_interval/5*3;moviefile = [pwd '/' testvideo];% resolution of screenScreenResolution = Screen('Resolution', ScrNr); %READ screen resolution and store it in a variableScreenWidth      = ScreenResolution(1).width;ScreenHeight     = ScreenResolution(1).height;% resolution of video stimulivideoWidth  = 1280; %widvideoHeight = 1024; %ScreenHeight;    change_ratio    = ScreenWidth/videoWidth;      %Change the width of the video to fit in the screen in case of differencesvideoWidth      = change_ratio*videoWidth;videoHeight     = change_ratio*videoHeight;if videoHeight>ScreenHeight                 %Change the height of the video to fit in the screen, if needed    change_ratio = ScreenHeight/videoHeight;    videoWidth   = change_ratio*videoWidth;    videoHeight  = change_ratio*videoHeight;end%Defines the rectangle where to show stimuliRECT = [ (ScreenWidth-videoWidth)/2, (ScreenHeight-videoHeight)/2, (ScreenWidth-videoWidth)/2+videoWidth, (ScreenHeight-videoHeight)/2+videoHeight];loop = 0;sound = 0;%[mov, ~, ~, Movx, Movy] = Screen('OpenMovie', win, moviefile);black=BlackIndex(win);white=WhiteIndex(win);%erase screenScreen('FillRect', win, black);vbl=Screen('Flip', win);disp(vbl);%Connect to NetStationif EEG     NetStation('Connect',NetStationHostName);end% synchroniseif EEG    NetStation('Synchronize',win);    WaitSecs(.5);    timeOfLastSync = GetSecs;endnextEventFrameCount = 1;for b=1:BLOCKS        mov = Screen('OpenMovie', win, moviefile,4,1,1,6,2);    WaitSecs(2);    frameNum = 0;       % sync with netstation if enough time has passed    if EEG && ( GetSecs - timeOfLastSync > eegSyncEverySecs )        NetStation('Synchronize',win);        WaitSecs(.5);    end        if EEG        NetStation('StartRecording');    end    WaitSecs(.5);            Screen('PlayMovie', mov, 1,loop,sound);        WaitSecs(.2);            while 1        [thisframe] = Screen('GetMovieImage', win, mov, 1, [], [], 1);                % check if video is over        if thisframe== -1            break        end                % draw next frame of the video        Screen('DrawTexture', win, thisframe, [], RECT);        vbl = Screen('Flip', win, vbl + framedur + offset);        frameNum = frameNum + 1;        %frame count                % send events if time is right        if frameNum == eventFrames(nextEventFrameCount)            eventTimes(nextEventFrameCount) = vbl;            nextEventFrameCount = nextEventFrameCount + 1;            if frameNum == 1                StartTime = vbl;            end                    end                Screen('Close', thisframe);    end        Screen('PlayMovie', mov, 0);            % Done. Stop playback:    Screen('CloseMovie',mov);               % Close movie object:        	    EndTime = vbl;        % send events    if EEG        for i = 1:nEventFrames            NetStation('Event',eventMarkers{i},eventTimes(i),framedur*5,'bloc',b,'fram',eventFrames(i));        end        NetStation('Event','strt',StartTime,framedur*5,'bloc',b);        NetStation('Event','end ',EndTime,framedur*5,'bloc',b);    end                WaitSecs(.5);        endif EEG    NetStation('StopRecording');endWaitSecs(1);if EEG    NetStation('Disconnect'); %uncomment unless one wants to run again fasterendScreen('CloseAll');ListenChar(0);          %reactivate keyboardShowCursor();           %show cursor againend